[{"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/App.js":"1","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/AuthOptions.js":"2","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/NewUserForm.js":"3","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Login.js":"4","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/context/UserContent.js":"5","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/index.js":"6","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Matches.js":"7","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Header.js":"8","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Home.js":"9","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/reportWebVitals.js":"10","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Match.js":"11","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/GameResultForm.js":"12","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Ranking.js":"13","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Calendar.js":"14","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/SendMessageForm.js":"15","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Inbox.js":"16"},{"size":4222,"mtime":1613327585494,"results":"17","hashOfConfig":"18"},{"size":1747,"mtime":1613261365469,"results":"19","hashOfConfig":"18"},{"size":6787,"mtime":1613327495454,"results":"20","hashOfConfig":"18"},{"size":2165,"mtime":1613329205324,"results":"21","hashOfConfig":"18"},{"size":76,"mtime":1612391795808,"results":"22","hashOfConfig":"18"},{"size":606,"mtime":1613091651555,"results":"23","hashOfConfig":"18"},{"size":1668,"mtime":1613287441392,"results":"24","hashOfConfig":"18"},{"size":2135,"mtime":1613286241944,"results":"25","hashOfConfig":"18"},{"size":3229,"mtime":1613334321870,"results":"26","hashOfConfig":"18"},{"size":362,"mtime":1612224480911,"results":"27","hashOfConfig":"28"},{"size":1633,"mtime":1613279684715,"results":"29","hashOfConfig":"18"},{"size":3028,"mtime":1613327442484,"results":"30","hashOfConfig":"18"},{"size":2646,"mtime":1613327517210,"results":"31","hashOfConfig":"18"},{"size":2788,"mtime":1613327430022,"results":"32","hashOfConfig":"18"},{"size":2194,"mtime":1613329665950,"results":"33","hashOfConfig":"18"},{"size":4087,"mtime":1613298122553,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"l6nvon",{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bi0ag2",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/App.js",["77","78","79","80","81"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/AuthOptions.js",["82","83","84"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/NewUserForm.js",["85","86"],"import React, { useEffect, useState, useContext } from 'react';\n// import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport UserContext from '../context/UserContent';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Button, Container, Col } from 'react-bootstrap';\n\n// const BASE_URL = 'http://localhost:5000';\n\n// import { Form } from 'react-bootstrap';\nconst NewUserForm = (props) => {\n  const [username, setUsername] = useState('');\n  const [skill, setSkill] = useState('');\n  const [availability, setAvailability] = useState('');\n  const [bio, setBio] = useState('');\n  const [image, setImage] = useState('');\n  const [city, setCity] = useState('');\n  const [zipcode, setZipcode] = useState('');\n\n  const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  const onFormSubmit = async (event) => {\n    event.preventDefault();\n    const newUser = {\n      username,\n      skill,\n      availability,\n      city,\n      zipcode,\n      bio,\n      image,\n    };\n    const loginRes = await axios.post(\n      `${process.env.API_URL}/users/add`,\n      newUser\n    );\n\n    if (loginRes.status === 200) {\n      const loginRes = await axios.post(\n        `${process.env.API_URL}/users/login`,\n        newUser\n      );\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user,\n      });\n      localStorage.setItem('auth-token', loginRes.data.token);\n      history.push('/');\n    }\n\n    // const loginRes = await axios.post('http://localhost:5000/users/add', {\n    //   username,\n    // });\n    // setUserData({\n    //   token: loginRes.data.token,\n    //   user: loginRes.data.user,\n    // });\n    // localStorage.setItem('auth-token', loginRes.data.token);\n    // history.push('/');\n  };\n\n  return (\n    <Form className=\"register-form\" onSubmit={onFormSubmit}>\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"formUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"username\"\n            placeholder=\"Enter username\"\n            onChange={(event) => setUsername(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"skillLevel\">\n          <Form.Label>Skill Level</Form.Label>\n          <Form.Control\n            type=\"skill\"\n            placeholder=\"Skill Level\"\n            onChange={(event) => setSkill(event.target.value)}\n          />\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Group controlId=\"about\">\n        <Form.Label>About</Form.Label>\n        <Form.Control\n          placeholder=\"Tell us about yourself.\"\n          onChange={(event) => setBio(event.target.value)}\n        />\n      </Form.Group>\n\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"formGridEmail\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"city\"\n            placeholder=\"Enter city\"\n            onChange={(event) => setCity(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"zipcode\">\n          <Form.Label>Zipcode</Form.Label>\n          <Form.Control\n            type=\"zipcode\"\n            placeholder=\"Skill Level\"\n            onChange={(event) => setZipcode(event.target.value)}\n          />\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"formGridState\">\n          <Form.Label>Availability</Form.Label>\n          <Form.Control\n            onChange={(event) => setAvailability(event.target.value)}\n            as=\"select\"\n            defaultValue=\"Choose...\"\n          >\n            <option>Choose...</option>\n            <option>Weekends</option>\n            <option>Weekdays</option>\n            <option>Mornings</option>\n            <option>Afternoons</option>\n            <option>Evenings</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridZip\" className=\"image\">\n          <Form.Label>Image</Form.Label>\n          <Form.Control onChange={(event) => setImage(event.target.value)} />\n        </Form.Group>\n      </Form.Row>\n      {/* <div className=\"mb-3\">\n    <Form.File id=\"formcheck-api-regular\">\n      <Form.File.Label>Regular file input</Form.File.Label>\n      <Form.File.Input />\n    </Form.File>\n  </div> */}\n      {/* <Form.Group id=\"formGridCheckbox\">\n        <Form.Check type=\"checkbox\" label=\"Check me out\" />\n      </Form.Group> */}\n\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n    // <form\n    //   className=\"new-user-form\"\n    //   onSubmit={onFormSubmit}\n    //   data-testid=\"NewUserForm--form\"\n    // >\n    //   <div>\n    //     <label htmlFor=\"username\">Username:</label>\n    //     <input\n    //       id=\"username\"\n    //       name=\"username\"\n    //       onChange={(event) => setUsername(event.target.value)}\n    //       value={username}\n    //       className=\"username\"\n    //     />\n    //   </div>\n    //   <div>\n    //     <label htmlFor=\"skill\">Skill Level:</label>\n    //     <input\n    //       id=\"skill\"\n    //       name=\"skill\"\n    //       onChange={(event) => setSkill(event.target.value)}\n    //       value={skill}\n    //       className=\"skill\"\n    //     />\n    //   </div>\n    //   <div>\n    //     <label htmlFor=\"availability\">Availability:</label>\n    //     <input\n    //       id=\"availability\"\n    //       name=\"availability\"\n    //       onChange={(event) => setAvailability(event.target.value)}\n    //       value={availability}\n    //       className=\"availability\"\n    //     />\n    //   </div>\n    //   <div>\n    //     <label htmlFor=\"city\">City:</label>\n    //     <input\n    //       id=\"city\"\n    //       name=\"city\"\n    //       onChange={(event) => setCity(event.target.value)}\n    //       value={city}\n    //       className=\"city\"\n    //     />\n    //   </div>\n    //   <div>\n    //     <label htmlFor=\"zipcode\">Zipcode:</label>\n    //     <input\n    //       id=\"zipcode\"\n    //       name=\"zipcode\"\n    //       onChange={(event) => setZipcode(event.target.value)}\n    //       value={zipcode}\n    //       className=\"zipcode\"\n    //     />\n    //   </div>\n    //   <div>\n    //     <label htmlFor=\"bio\">About:</label>\n    //     <input\n    //       id=\"bio\"\n    //       name=\"bio\"\n    //       onChange={(event) => setBio(event.target.value)}\n    //       value={bio}\n    //       className=\"bio\"\n    //     />\n    //   </div>\n    //   <div>\n    //     <label htmlFor=\"image\">Image:</label>\n    //     <input\n    //       id=\"image\"\n    //       name=\"image\"\n    //       onChange={(event) => setImage(event.target.value)}\n    //       value={image}\n    //       className=\"image\"\n    //     />\n    //   </div>\n    //   <input type=\"submit\" value=\"Add User\" />\n    // </form>\n  );\n};\n\nexport default NewUserForm;\n",["87","88"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Login.js",["89","90","91"],"import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport UserContext from '../context/UserContent';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Button, Container, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Login = (props) => {\n  const [username, setUsername] = useState('');\n  const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  const onFormSubmit = async (event) => {\n    event.preventDefault();\n    const loginUser = { username };\n    const loginRes = await axios.post(\n      `${process.env.API_URL}/users/login`,\n      loginUser\n    );\n    setUserData({\n      token: loginRes.data.token,\n      user: loginRes.data.user,\n    });\n    localStorage.setItem('auth-token', loginRes.data.token);\n    history.push('/');\n  };\n\n  return (\n    <Container>\n      <Form\n        inline\n        className=\"new-user-form\"\n        onSubmit={onFormSubmit}\n        data-testid=\"NewUserForm--form\"\n      >\n        <Form.Group controlId=\"formUsername\">\n          <Form.Label htmlFor=\"username\">Username:</Form.Label>\n          <Form.Control\n            id=\"username\"\n            name=\"username\"\n            onChange={(event) => setUsername(event.target.value)}\n            value={username}\n            className=\"username\"\n          />\n        </Form.Group>\n        <Button variant=\"dark\" type=\"submit\">\n          Log In\n        </Button>\n        {/* <Button variant=\"outline-info\" type=\"submit\" value=\"Log In\">\n          Log In\n         </Button> */}\n      </Form>\n    </Container>\n\n    // <form\n    //   className=\"new-user-form\"\n    //   onSubmit={onFormSubmit}\n    //   data-testid=\"NewUserForm--form\"\n    // >\n    //   <div>\n    //     <label htmlFor=\"username\">Username:</label>\n    //     <input\n    //       id=\"username\"\n    //       name=\"username\"\n    //       onChange={(event) => setUsername(event.target.value)}\n    //       value={username}\n    //       className=\"username\"\n    //     />\n    //   </div>\n\n    //   <input type=\"submit\" value=\"Log In\" />\n    // </form>\n  );\n};\n\nexport default Login;\n","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/context/UserContent.js",[],["92","93"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/index.js",["94"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nReactDOM.render(\n  <React.StrictMode>\n    {/* <BrowserRouter> */}\n    <App />\n    {/* </BrowserRouter> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Matches.js",["95","96","97","98","99","100"],"import React, { useEffect, useState, useContext } from 'react';\n// import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport UserContext from '../context/UserContent';\nimport { useHistory } from 'react-router-dom';\n// import Matches from './Matches';\nimport Match from './Match';\n\n// here we will need something that says: if user exists, show these matches\nconst Matches = (props) => {\n  // create button, if button is clicked. call the prop and iterate through matches, match should hace its own component\n  console.log(props);\n  const { userData, setUserData } = useContext(UserContext);\n  //   return <h1> homepage</h1>;\n  const userMatchesList = props.userMatches.map((user, i) => {\n    console.log(user);\n    return (\n      // <li key={user._id}>\n      <Match\n        username={user.username}\n        availability={user.availability}\n        skillLevel={user.skillLevel}\n        bio={user.bio}\n        city={user.city}\n        zipcode={user.zipcode}\n        image={user.image}\n        index={i + 1}\n        id={user._id}\n        key={user._id}\n      />\n      // </li>\n    );\n  });\n  // return <ul className=\"match-list\">{userMatchesList}</ul>;\n\n  return (\n    <div>\n      <h1 className=\"rank-title\"> Your Player Matches </h1>\n      <p className=\"rank-title\">\n        {' '}\n        * All matches are based on availability, skill level and location. Find\n        and reach out to your next tennis buddy below.\n      </p>\n      {/* {(userData.user && (props.userMatches.length > 0)) ( */}\n\n      {props.userMatches.length > 0 ? (\n        userMatchesList\n      ) : (\n        <h1> No matches found</h1>\n      )}\n    </div>\n  );\n};\nexport default Matches;\n","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Header.js",["101","102","103","104","105","106","107"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Home.js",["108","109","110","111"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/reportWebVitals.js",[],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Match.js",["112"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/GameResultForm.js",["113","114","115","116","117","118","119"],"import React, { useEffect, useState, useContext } from 'react';\n// import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport UserContext from '../context/UserContent';\nimport { useHistory, Link } from 'react-router-dom';\n// import { Form } from 'react-bootstrap';\nimport { Form, Button, Container, Col } from 'react-bootstrap';\n\n// const BASE_URL = 'http://localhost:5000';\n\nconst GameResultForm = (props) => {\n  const [username, setUsername] = useState('');\n  const [winner, setWinner] = useState('');\n  const [date, setDate] = useState('');\n  const [tennisBuddy, setTennisBuddy] = useState('');\n  const [location, setLocation] = useState('');\n  const { userData, setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  // const onFormSubmit = (event) => {\n  const onFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const newResult = {\n      username: userData.user.username,\n      winner,\n      date,\n      tennisBuddy,\n      location,\n    };\n\n    try {\n      const loginRes = await axios.post(\n        `${process.env.API_URL}/match/add`,\n        newResult\n      );\n      setTennisBuddy('');\n      setWinner('');\n      setDate('');\n      setLocation('');\n    } catch (err) {\n      console.log(err.response);\n    }\n    history.push('/Calendar');\n  };\n\n  return (\n    <div className=\"button-submit-record\">\n      {' '}\n      <h1 className=\"rank-title\"> Record Past or Upcoming Matches</h1>\n      <p className=\"rank-title\">\n        * Matches automatically get updated in the{' '}\n        <Link to=\"/Calendar\"> calendar</Link> and{' '}\n        <Link to=\"/Rankings\"> rankings</Link> page after they are recorded.{' '}\n      </p>\n      <Form className=\"schedule-form\" onSubmit={onFormSubmit}>\n        <Form.Group controlId=\"buddy\">\n          <Form.Label>Tennis Buddy</Form.Label>\n          <Form.Control\n            onChange={(event) => setTennisBuddy(event.target.value)}\n            type=\"buddy\"\n            placeholder=\"Enter username\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"Winner\">\n          <Form.Label>Winner</Form.Label>\n          <Form.Control\n            type=\"winn\"\n            placeholder=\"If applicable, enter winner's username\"\n            onChange={(event) => setWinner(event.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"location\">\n          <Form.Label>Location</Form.Label>\n          <Form.Control\n            type=\"location\"\n            placeholder=\"Enter tennis court name\"\n            onChange={(event) => setLocation(event.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"date\">\n          <Form.Label>Date</Form.Label>\n          <Form.Control\n            onChange={(event) => setDate(event.target.value)}\n            type=\"date\"\n            placeholder=\"Enter the date of the meetup\"\n          />\n        </Form.Group>\n        <Button variant=\"warning\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default GameResultForm;\n","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Ranking.js",["120","121","122","123"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Calendar.js",["124","125","126","127","128"],"//make axios calls to the gameresults database\n//create a state variable that store an array of hashes which stores username (and image?) and their win count\n//use map function to return users from highest to lowest wins\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport UserContext from '../context/UserContent';\nimport { useHistory } from 'react-router-dom';\nimport { Schedule } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\n\n// const BASE_URL = 'http://localhost:5000';\n\nconst Calendar = () => {\n  const { userData, setUserData } = useContext(UserContext);\n  const [results, setResults] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n\n  const allGames = async () => {\n    try {\n      const apiListGames = await axios.get(`${process.env.API_URL}/match`);\n      console.log(apiListGames.data);\n      const schedule = apiListGames.data\n        .filter((match) => {\n          return userData.user.username === match.username;\n          // return `Date: ${match.date}, Tennis Buddy: ${match.tennisBuddy}`; //add location?\n        })\n        .map((match) => {\n          return [match.date, match.tennisBuddy, match.winner, match.location];\n        });\n      setResults(schedule);\n      console.log(schedule);\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(error.message);\n    }\n  };\n  useEffect(() => {\n    allGames();\n  }, []);\n\n  console.log({ results });\n  let ranksort = results.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  console.log(results);\n  return (\n    <div className=\"ranking-table\">\n      <h1 className=\"rank-title\">Past or Upcoming Events</h1>\n      <p className=\"rank-title\">\n        {' '}\n        * When a game is {<Link to=\"/ResultsForm\"> recorded</Link>}, the\n        calendar is automatically updated.{' '}\n      </p>\n      <table class=\"table table-dark table-hover\">\n        <thead>\n          <tr class=\"table-info\">\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Tennis Buddy</th>\n            <th scope=\"col\">Winner</th>\n            <th scope=\"col\">Location</th>\n          </tr>\n        </thead>\n        <tbody>\n          {ranksort.map((user, index) => {\n            return (\n              <tr>\n                {/* <th scope=\"row\"> {index + 1}</th> */}\n                <td class=\"table-light\">{user[0]}</td>\n                <td class=\"table-light\">{user[1]} </td>\n                <td class=\"table-light\">{user[2]} </td>\n                <td class=\"table-light\">{user[3]} </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n    // <div>\n    //   <h1> My Calendar</h1>\n    //   <h2>{results}</h2>\n    // </div>\n  );\n};\nexport default Calendar;\n","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/SendMessageForm.js",["129","130","131","132","133"],"import React, { useEffect, useState, useContext } from 'react';\n// import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport UserContext from '../context/UserContent';\nimport { useHistory } from 'react-router-dom';\n// import { Form } from 'react-bootstrap';\n// import { Button } from 'react-bootstrap';\nimport { Form, Button, Alert, Container, Col } from 'react-bootstrap';\n\n// const BASE_URL = 'http://localhost:5000';\n\nconst SendMessageForm = (props) => {\n  console.log(props);\n  const { userData, setUserData } = useContext(UserContext);\n\n  const [message, setMessage] = useState('');\n\n  const [alertMessage, setAlertMessage] = useState(null);\n\n  const onFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(props.toUserId);\n\n    await axios.post(`${process.env.API_URL}/users/message`, {\n      date: Date.now(),\n      from: userData.user.id,\n      message: message,\n      to: props.toUserId,\n      sender_name: userData.user.username,\n      receiver_name: props.receiver_name,\n    });\n\n    setMessage('');\n    setAlertMessage('Your message has been sent.');\n  };\n\n  return (\n    <form\n      className=\"new-user-form\"\n      onSubmit={onFormSubmit}\n      data-testid=\"NewUserForm--form\"\n    >\n      <div>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          {/* <Form.Label>Example textarea</Form.Label> */}\n          <Form.Control\n            onChange={(event) => setMessage(event.target.value)}\n            value={message}\n            as=\"textarea\"\n            rows={2}\n          />\n        </Form.Group>\n        {/* <label htmlFor=\"message\">Message:</label>\n        <input\n          id=\"message\"\n          name=\"message\"\n          onChange={(event) => setMessage(event.target.value)}\n          value={message}\n          className=\"message\"\n          placeholder=\"Enter your message here\"\n          STYLE=\"color: black\"\n        /> */}\n      </div>\n      <Button variant=\"secondary\" type=\"submit\" value=\"message\">\n        Send Message\n      </Button>\n      {alertMessage ? <Alert variant=\"info\">{alertMessage}</Alert> : ''}\n\n      {/* <input type=\"submit\" value=\"Send Message\" /> */}\n    </form>\n  );\n};\n\nexport default SendMessageForm;\n","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Inbox.js",["134","135","136","137"],"import React, { useEffect, useState, useContext } from 'react';\n// import PropTypes from 'prop-types';\nimport UserContext from '../context/UserContent';\nimport { useHistory } from 'react-router-dom';\nimport SendMessageForm from './SendMessageForm';\nimport Table from 'react-bootstrap/Table';\n\nconst Inbox = () => {\n  const { userData } = useContext(UserContext);\n\n  const userInbox = userData.user.inbox.map((data, index) => {\n    let newdate = new Date(data.date);\n    let day = String(newdate.getDate()).padStart(2, '0');\n    let month = String(newdate.getMonth() + 1).padStart(2, '0');\n    let year = newdate.getFullYear();\n    let fullDate = month + '/' + day + '/' + year;\n    console.log(newdate);\n    return (\n      <div className=\"ranking-table\">\n        {/* <table class=\"table table-dark table-striped\">\n          <thead>\n            <tr> */}\n        <table class=\"table table-sm table-dark\">\n          <thead>\n            <tr class=\"table-light\">\n              <th>#</th>\n              <th>Date</th>\n              <th>From</th>\n              <th>Message</th>\n              <th>Reply Back</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"table-success\">{index + 1}</td>\n              <td class=\"table-success\">{fullDate}</td>\n              <td class=\"table-success\">{data.sender_name}</td>\n              <td class=\"table-success\">{data.message}</td>\n              <td class=\"table-success\">\n                <SendMessageForm\n                  toUserId={data.from}\n                  sender_name={data.username}\n                  receiver_name={data.sender_name}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      // <div>\n      //   <ul>\n      //     <li>{`Date: ${fullDate}`}</li>\n      //     {/* //from */}\n      //     <li> {`From: ${data.sender_name}`} </li>\n      //     <li>{`Message: ${data.message}`} </li>\n      //     <li>\n      //       {'Reply back:'}{' '}\n      //       <SendMessageForm\n      //         toUserId={data.from}\n      //         sender_name={data.username}\n      //         receiver_name={data.sender_name}\n      //       />\n      //     </li>\n      //   </ul>\n      // </div>\n    );\n  });\n\n  const sentMessages = userData.user.sentMsg.map((data, index) => {\n    let newdate = new Date(data.date);\n    let day = String(newdate.getDate()).padStart(2, '0');\n    let month = String(newdate.getMonth() + 1).padStart(2, '0');\n    let year = newdate.getFullYear();\n    let fullDate = month + '/' + day + '/' + year;\n    return (\n      <div className=\"ranking-table\">\n        <table class=\"table table-sm table-dark\">\n          <thead>\n            <tr class=\"table-dark\">\n              <th>#</th>\n              <th>Date</th>\n              <th>To</th>\n              <th>Message</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"table-secondary\">{index + 1}</td>\n              <td class=\"table-secondary\">{fullDate}</td>\n              <td class=\"table-secondary\">{data.receiver_name}</td>\n              <td class=\"table-secondary\">{data.message}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      // <div>\n      //   <ul>\n      //     <li>{`Date: ${fullDate}`}</li>\n      //     {/* data.to */}\n      //     <li> {`To: ${data.receiver_name}`} </li>\n      //     <li>{`Message: ${data.message}`} </li>\n      //   </ul>\n      // </div>\n    );\n  });\n  return (\n    <div>\n      <h1 className=\"messages\"> Inbox </h1>\n      <div className=\"inbox\">\n        {/* use a loop to display inbox and sent message in order */}\n        {userData.user.inbox\n          ? userInbox\n          : //   ? JSON.stringify(userData.user.inbox)\n            'You have not received any messages'}\n      </div>\n      <h1 className=\"messages\"> Sent </h1>\n      <div className=\"sent\">\n        {userData.user.sentMsg\n          ? sentMessages\n          : //   ? JSON.stringify(userData.user.sentMsg)\n            'You have not sent any messages'}\n      </div>\n    </div>\n  );\n};\n\nexport default Inbox;\n",{"ruleId":"138","severity":1,"message":"139","line":2,"column":40,"nodeType":"140","messageId":"141","endLine":2,"endColumn":51},{"ruleId":"138","severity":1,"message":"142","line":9,"column":8,"nodeType":"140","messageId":"141","endLine":9,"endColumn":19},{"ruleId":"138","severity":1,"message":"143","line":19,"column":10,"nodeType":"140","messageId":"141","endLine":19,"endColumn":15},{"ruleId":"138","severity":1,"message":"144","line":27,"column":10,"nodeType":"140","messageId":"141","endLine":27,"endColumn":24},{"ruleId":"138","severity":1,"message":"145","line":28,"column":10,"nodeType":"140","messageId":"141","endLine":28,"endColumn":22},{"ruleId":"138","severity":1,"message":"146","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":12},{"ruleId":"138","severity":1,"message":"147","line":11,"column":9,"nodeType":"140","messageId":"141","endLine":11,"endColumn":14},{"ruleId":"138","severity":1,"message":"148","line":12,"column":9,"nodeType":"140","messageId":"141","endLine":12,"endColumn":17},{"ruleId":"138","severity":1,"message":"149","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"150","line":6,"column":24,"nodeType":"140","messageId":"141","endLine":6,"endColumn":33},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"138","severity":1,"message":"149","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"155","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":17},{"ruleId":"138","severity":1,"message":"156","line":6,"column":35,"nodeType":"140","messageId":"141","endLine":6,"endColumn":38},{"ruleId":"151","replacedBy":"157"},{"ruleId":"153","replacedBy":"158"},{"ruleId":"138","severity":1,"message":"159","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":23},{"ruleId":"138","severity":1,"message":"149","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"160","line":1,"column":28,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"161","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":13},{"ruleId":"138","severity":1,"message":"162","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":20},{"ruleId":"138","severity":1,"message":"163","line":13,"column":11,"nodeType":"140","messageId":"141","endLine":13,"endColumn":19},{"ruleId":"138","severity":1,"message":"164","line":13,"column":21,"nodeType":"140","messageId":"141","endLine":13,"endColumn":32},{"ruleId":"138","severity":1,"message":"165","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":16},{"ruleId":"138","severity":1,"message":"166","line":4,"column":18,"nodeType":"140","messageId":"141","endLine":4,"endColumn":25},{"ruleId":"138","severity":1,"message":"167","line":4,"column":27,"nodeType":"140","messageId":"141","endLine":4,"endColumn":37},{"ruleId":"138","severity":1,"message":"168","line":4,"column":39,"nodeType":"140","messageId":"141","endLine":4,"endColumn":45},{"ruleId":"138","severity":1,"message":"169","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":14},{"ruleId":"138","severity":1,"message":"170","line":7,"column":16,"nodeType":"140","messageId":"141","endLine":7,"endColumn":27},{"ruleId":"138","severity":1,"message":"171","line":19,"column":9,"nodeType":"140","messageId":"141","endLine":19,"endColumn":16},{"ruleId":"138","severity":1,"message":"149","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"160","line":1,"column":28,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"147","line":17,"column":9,"nodeType":"140","messageId":"141","endLine":17,"endColumn":14},{"ruleId":"138","severity":1,"message":"164","line":18,"column":21,"nodeType":"140","messageId":"141","endLine":18,"endColumn":32},{"ruleId":"138","severity":1,"message":"172","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":13},{"ruleId":"138","severity":1,"message":"149","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"150","line":7,"column":24,"nodeType":"140","messageId":"141","endLine":7,"endColumn":33},{"ruleId":"138","severity":1,"message":"156","line":7,"column":35,"nodeType":"140","messageId":"141","endLine":7,"endColumn":38},{"ruleId":"138","severity":1,"message":"173","line":12,"column":10,"nodeType":"140","messageId":"141","endLine":12,"endColumn":18},{"ruleId":"138","severity":1,"message":"174","line":12,"column":20,"nodeType":"140","messageId":"141","endLine":12,"endColumn":31},{"ruleId":"138","severity":1,"message":"164","line":17,"column":21,"nodeType":"140","messageId":"141","endLine":17,"endColumn":32},{"ruleId":"138","severity":1,"message":"175","line":33,"column":13,"nodeType":"140","messageId":"141","endLine":33,"endColumn":21},{"ruleId":"138","severity":1,"message":"162","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":20},{"ruleId":"138","severity":1,"message":"163","line":11,"column":11,"nodeType":"140","messageId":"141","endLine":11,"endColumn":19},{"ruleId":"138","severity":1,"message":"164","line":11,"column":21,"nodeType":"140","messageId":"141","endLine":11,"endColumn":32},{"ruleId":"138","severity":1,"message":"145","line":13,"column":10,"nodeType":"140","messageId":"141","endLine":13,"endColumn":22},{"ruleId":"138","severity":1,"message":"176","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":18},{"ruleId":"138","severity":1,"message":"164","line":14,"column":21,"nodeType":"140","messageId":"141","endLine":14,"endColumn":32},{"ruleId":"138","severity":1,"message":"145","line":16,"column":10,"nodeType":"140","messageId":"141","endLine":16,"endColumn":22},{"ruleId":"138","severity":1,"message":"177","line":17,"column":9,"nodeType":"140","messageId":"141","endLine":17,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":40,"column":6,"nodeType":"180","endLine":40,"endColumn":8,"suggestions":"181"},{"ruleId":"138","severity":1,"message":"149","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"162","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":20},{"ruleId":"138","severity":1,"message":"150","line":8,"column":31,"nodeType":"140","messageId":"141","endLine":8,"endColumn":40},{"ruleId":"138","severity":1,"message":"156","line":8,"column":42,"nodeType":"140","messageId":"141","endLine":8,"endColumn":45},{"ruleId":"138","severity":1,"message":"164","line":14,"column":21,"nodeType":"140","messageId":"141","endLine":14,"endColumn":32},{"ruleId":"138","severity":1,"message":"149","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"160","line":1,"column":28,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"162","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":20},{"ruleId":"138","severity":1,"message":"172","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":13},"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'AuthOptions' is defined but never used.","'Badge' is defined but never used.","'userCollection' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'Home' is defined but never used.","'login' is assigned a value but never used.","'register' is assigned a value but never used.","'useEffect' is defined but never used.","'Container' is defined but never used.","no-native-reassign",["182"],"no-negated-in-lhs",["183"],"'PropTypes' is defined but never used.","'Col' is defined but never used.",["182"],["183"],"'BrowserRouter' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'useHistory' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'classes' is assigned a value but never used.","'Table' is defined but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'loginRes' is assigned a value but never used.","'Schedule' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allGames'. Either include it or remove the dependency array.","ArrayExpression",["184"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},"Update the dependencies array to be: [allGames]",{"range":"187","text":"188"},[1473,1475],"[allGames]"]