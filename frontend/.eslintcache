[{"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/App.js":"1","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/AuthOptions.js":"2","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/NewUserForm.js":"3","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Login.js":"4","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/context/UserContent.js":"5","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/index.js":"6","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Matches.js":"7","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Header.js":"8","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Home.js":"9","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/reportWebVitals.js":"10","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Match.js":"11","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/GameResultForm.js":"12","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Ranking.js":"13","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Calendar.js":"14","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/SendMessageForm.js":"15"},{"size":3671,"mtime":1612748301111,"results":"16","hashOfConfig":"17"},{"size":1478,"mtime":1612772392319,"results":"18","hashOfConfig":"17"},{"size":3761,"mtime":1612646346427,"results":"19","hashOfConfig":"17"},{"size":2099,"mtime":1612647458384,"results":"20","hashOfConfig":"17"},{"size":76,"mtime":1612391795808,"results":"21","hashOfConfig":"17"},{"size":500,"mtime":1612224480910,"results":"22","hashOfConfig":"17"},{"size":1365,"mtime":1612892971169,"results":"23","hashOfConfig":"17"},{"size":622,"mtime":1612772106906,"results":"24","hashOfConfig":"17"},{"size":1844,"mtime":1612749340581,"results":"25","hashOfConfig":"17"},{"size":362,"mtime":1612224480911,"results":"26","hashOfConfig":"17"},{"size":633,"mtime":1612893143941,"results":"27","hashOfConfig":"17"},{"size":2668,"mtime":1612722507693,"results":"28","hashOfConfig":"17"},{"size":1420,"mtime":1612849008320,"results":"29","hashOfConfig":"17"},{"size":1294,"mtime":1612748840899,"results":"30","hashOfConfig":"17"},{"size":3687,"mtime":1612902019322,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"l6nvon",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/App.js",["71","72","73"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/AuthOptions.js",[],["74","75"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/NewUserForm.js",["76"],"import React, { useEffect, useState, useContext } from 'react';\n// import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport UserContext from '../context/UserContent';\nimport { useHistory } from 'react-router-dom';\n// import { Form } from 'react-bootstrap';\nconst NewUserForm = (props) => {\n  const [username, setUsername] = useState('');\n  const [skill, setSkill] = useState('');\n  const [availability, setAvailability] = useState('');\n  const [bio, setBio] = useState('');\n  const [image, setImage] = useState('');\n  const [city, setCity] = useState('');\n  const [zipcode, setZipcode] = useState('');\n\n  const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  // const onFormSubmit = (event) => {\n  const onFormSubmit = async (event) => {\n    event.preventDefault();\n    const newUser = {\n      username,\n      skill,\n      availability,\n      city,\n      zipcode,\n      bio,\n      image,\n    };\n    const loginRes = await axios.post(\n      'http://localhost:5000/users/add',\n      newUser\n    );\n\n    if (loginRes.status === 200) {\n      const loginRes = await axios.post(\n        'http://localhost:5000/users/login',\n        newUser\n      );\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user,\n      });\n      localStorage.setItem('auth-token', loginRes.data.token);\n      history.push('/');\n    }\n\n    // const loginRes = await axios.post('http://localhost:5000/users/add', {\n    //   username,\n    // });\n    // setUserData({\n    //   token: loginRes.data.token,\n    //   user: loginRes.data.user,\n    // });\n    // localStorage.setItem('auth-token', loginRes.data.token);\n    // history.push('/');\n  };\n\n  return (\n    <form\n      className=\"new-user-form\"\n      onSubmit={onFormSubmit}\n      data-testid=\"NewUserForm--form\"\n    >\n      <div>\n        <label htmlFor=\"username\">Username:</label>\n        <input\n          id=\"username\"\n          name=\"username\"\n          onChange={(event) => setUsername(event.target.value)}\n          value={username}\n          className=\"username\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"skill\">Skill Level:</label>\n        <input\n          id=\"skill\"\n          name=\"skill\"\n          onChange={(event) => setSkill(event.target.value)}\n          value={skill}\n          className=\"skill\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"availability\">Availability:</label>\n        <input\n          id=\"availability\"\n          name=\"availability\"\n          onChange={(event) => setAvailability(event.target.value)}\n          value={availability}\n          className=\"availability\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"city\">City:</label>\n        <input\n          id=\"city\"\n          name=\"city\"\n          onChange={(event) => setCity(event.target.value)}\n          value={city}\n          className=\"city\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"zipcode\">Zipcode:</label>\n        <input\n          id=\"zipcode\"\n          name=\"zipcode\"\n          onChange={(event) => setZipcode(event.target.value)}\n          value={zipcode}\n          className=\"zipcode\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"bio\">About:</label>\n        <input\n          id=\"bio\"\n          name=\"bio\"\n          onChange={(event) => setBio(event.target.value)}\n          value={bio}\n          className=\"bio\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"image\">Image:</label>\n        <input\n          id=\"image\"\n          name=\"image\"\n          onChange={(event) => setImage(event.target.value)}\n          value={image}\n          className=\"image\"\n        />\n      </div>\n      <input type=\"submit\" value=\"Add User\" />\n    </form>\n  );\n};\n\nexport default NewUserForm;\n",["77","78"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Login.js",["79","80"],"import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport UserContext from '../context/UserContent';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Login = (props) => {\n  const [username, setUsername] = useState('');\n  const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  const onFormSubmit = async (event) => {\n    event.preventDefault();\n    const loginUser = { username };\n    const loginRes = await axios.post(\n      'http://localhost:5000/users/login',\n      loginUser\n    );\n    setUserData({\n      token: loginRes.data.token,\n      user: loginRes.data.user,\n    });\n    localStorage.setItem('auth-token', loginRes.data.token);\n    history.push('/');\n  };\n\n  return (\n    <Container>\n      <Form\n        className=\"new-user-form\"\n        onSubmit={onFormSubmit}\n        data-testid=\"NewUserForm--form\"\n      >\n        <Form.Group controlId=\"formUsername\">\n          {/* <div> */}\n          <Form.Label htmlFor=\"username\">Username:</Form.Label>\n          <Form.Control\n            id=\"username\"\n            name=\"username\"\n            onChange={(event) => setUsername(event.target.value)}\n            value={username}\n            className=\"username\"\n          />\n          {/* </div> */}\n        </Form.Group>\n        <Button variant=\"secondary\" type=\"submit\" value=\"Log In\">\n          Log In\n        </Button>\n      </Form>\n    </Container>\n    // <form\n    //   className=\"new-user-form\"\n    //   onSubmit={onFormSubmit}\n    //   data-testid=\"NewUserForm--form\"\n    // >\n    //   <div>\n    //     <label htmlFor=\"username\">Username:</label>\n    //     <input\n    //       id=\"username\"\n    //       name=\"username\"\n    //       onChange={(event) => setUsername(event.target.value)}\n    //       value={username}\n    //       className=\"username\"\n    //     />\n    //   </div>\n\n    //   <input type=\"submit\" value=\"Log In\" />\n    // </form>\n  );\n};\n\nexport default Login;\n",["81","82"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/context/UserContent.js",[],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/index.js",[],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Matches.js",["83","84","85","86","87","88"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Header.js",[],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Home.js",["89","90","91"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/reportWebVitals.js",[],["92","93"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Match.js",["94"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/GameResultForm.js",["95","96","97","98","99","100"],"import React, { useEffect, useState, useContext } from 'react';\n// import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport UserContext from '../context/UserContent';\nimport { useHistory } from 'react-router-dom';\n// import { Form } from 'react-bootstrap';\n\nconst GameResultForm = (props) => {\n  const [username, setUsername] = useState('');\n  const [winner, setWinner] = useState('');\n  const [date, setDate] = useState('');\n  const [tennisBuddy, setTennisBuddy] = useState('');\n\n  const { userData, setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  // const onFormSubmit = (event) => {\n  const onFormSubmit = async (event) => {\n    event.preventDefault();\n    // ADD TENNIS BUDDY FIELD TO BACKEND AND MAYBE SCORE CARD\n    // HOW TO IMPLEMENT CALENDAR COMPONENT THAT CONTAINS PAST AND FUTURE GAMES?\n    // for chat messages: back end model - only contain the user field (the user recieving messages) and the value can be an array of hashes. the hashes key would be: from_user, date (date.now), and message string.\n    const newResult = {\n      username: userData.user.username,\n      winner,\n      date,\n      tennisBuddy,\n    };\n\n    // const loginRes = await axios\n    //   .post('http://localhost:5000/match/add', newResult)\n    //   .then((response) => {})\n    //   .catch((err) => {\n    // console.log(err.response);\n    //   });\n    try {\n      const loginRes = await axios.post(\n        'http://localhost:5000/match/add',\n        newResult\n      );\n      setTennisBuddy('');\n      setWinner('');\n      setDate('');\n    } catch (err) {\n      console.log(err.response);\n    }\n\n    console.log(newResult);\n  };\n\n  return (\n    <form\n      className=\"new-user-form\"\n      onSubmit={onFormSubmit}\n      data-testid=\"NewUserForm--form\"\n    >\n      <div>\n        <label htmlFor=\"buddy\">Tennis Buddy:</label>\n        <input\n          id=\"buddy\"\n          name=\"buddy\"\n          onChange={(event) => setTennisBuddy(event.target.value)}\n          value={tennisBuddy}\n          className=\"buddy\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"winner\">Winner:</label>\n        <input\n          id=\"winner\"\n          name=\"winner\"\n          onChange={(event) => setWinner(event.target.value)}\n          value={winner}\n          className=\"winner\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"date\">Date:</label>\n        <input\n          id=\"date\"\n          name=\"date\"\n          onChange={(event) => setDate(event.target.value)}\n          value={date}\n          className=\"date\"\n        />\n      </div>\n      <input type=\"submit\" value=\"Record Result\" />\n    </form>\n  );\n};\n\nexport default GameResultForm;\n","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Ranking.js",["101","102","103","104"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Calendar.js",["105","106","107","108","109"],"//make axios calls to the gameresults database\n//create a state variable that store an array of hashes which stores username (and image?) and their win count\n//use map function to return users from highest to lowest wins\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport UserContext from '../context/UserContent';\nimport { useHistory } from 'react-router-dom';\n\nconst Calendar = () => {\n  const { userData, setUserData } = useContext(UserContext);\n  const [results, setResults] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const allGames = async () => {\n    try {\n      const apiListGames = await axios.get('http://localhost:5000/match');\n\n      const schedule = apiListGames.data.map((match) => {\n        if (userData.user.username === match.username) {\n          return `Date: ${match.date}, Opponent: ${match.tennisBuddy}`; //add location?\n        }\n      }, {});\n      setResults(schedule);\n      console.log(schedule);\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(error.message);\n    }\n  };\n  useEffect(() => {\n    allGames();\n  }, []);\n\n  console.log({ results });\n  return (\n    <div>\n      <h1> My Calendar</h1>\n      <h2>{results}</h2>\n    </div>\n  );\n};\nexport default Calendar;\n","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/SendMessageForm.js",["110","111","112","113","114","115","116","117","118"],"import React, { useEffect, useState, useContext } from 'react';\n// import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport UserContext from '../context/UserContent';\nimport { useHistory } from 'react-router-dom';\n// import { Form } from 'react-bootstrap';\nconst SendMessageForm = (props) => {\n  const { userData, setUserData } = useContext(UserContext);\n  const history = useHistory();\n  // date, sentUser and message should be an object in inbox\n  const [toUsername, setToUsername] = useState();\n  //   const [date, setDate] = useState(Date.now)\n  const [message, setMessage] = useState('');\n  // figure out how to push new data into the array instead of replacing old data\n  const [inbox, setInbox] = useState([]);\n  //**Updating info from the logged in user who sent a message */\n  //   const [composed, setComposed] = useState(userData.user.sentMessage);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Figure out how to find the id of the username who is recieving the msg + how to store data from the form into an array in the inbox state\n  //get username from the form user has been submitted. Need to find the id of that username in our database.\n  // Make a call to axios? store all users in an array and create context for it? to get access to user database and specifically the id\n  // once we get the id of the username who will receive messages, do a post request to edit that users field inbox\n  // make sure we are ADDING to the array instead of replacing it each time. Somehow maybe we can use .push?\n  // so that it will add messages to the end of the array\n  // also do a post request to edit the logged in user's field: sentMessage\n  // Then send this component as a prop to Matches or Match component?\n  // const userList = async () => {\n  //     try {\n  //       const apiListUsers = await axios.get('http://localhost:5000/users');\n  //       let findUser = ''\n  //         for (user in apiListUsers.data) {\n  //             if (user.username === props.username) {\n  //                 findUser = user\n  //             }\n  //         }\n  //       setToUsername(findUser.username);\n  //       setInbox(findUser.inbox)\n  //     } catch (error) {\n  //       console.log(error);\n  //       setErrorMessage(error.message);\n  //     }\n  //   };\n  //   useEffect(() => {\n  //     userList();\n  //   }, []);\n  const onFormSubmit = async (event) => {\n    event.preventDefault();\n    // setInbox([...inbox, {'date': Date.now(), 'from_username': userData.user.username, 'message': message}])\n    // setComposed([...composed, {'date': Date.now(), 'to_user': props.toUserId, 'message': message}])\n\n    // const toUser = {\n    //   inbox: // date: Date.now, sent_user: userdata.user.id, message:\n    // };\n    // const fromUser = {\n    //     composed: // fromDate: Date.now, sent_user: userdata.user.id, message:\n    // };\n    await axios.post(`http://localhost:5000/users/message`, {\n      date: Date.now,\n      from: userData.user.id,\n      message: message,\n      to: props.toUserId,\n    });\n    // const updateFromUser = await axios.post(\n    //     `http://localhost:5000/users/update/${userData.user.id}`,\n    //     fromUser\n    //   );\n  };\n\n  return (\n    <form\n      className=\"new-user-form\"\n      onSubmit={onFormSubmit}\n      data-testid=\"NewUserForm--form\"\n    >\n      <div>\n        <label htmlFor=\"message\">Message:</label>\n        <input\n          id=\"message\"\n          name=\"message\"\n          onChange={(event) => setMessage(event.target.value)}\n          value={message}\n          className=\"message\"\n        />\n      </div>\n      <input type=\"submit\" value=\"Send Message\" />\n    </form>\n  );\n};\n\nexport default SendMessageForm;\n",{"ruleId":"119","severity":1,"message":"120","line":9,"column":8,"nodeType":"121","messageId":"122","endLine":9,"endColumn":19},{"ruleId":"119","severity":1,"message":"123","line":22,"column":10,"nodeType":"121","messageId":"122","endLine":22,"endColumn":24},{"ruleId":"119","severity":1,"message":"124","line":23,"column":10,"nodeType":"121","messageId":"122","endLine":23,"endColumn":22},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"119","severity":1,"message":"129","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"125","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"119","severity":1,"message":"129","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"132","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":17},{"ruleId":"125","replacedBy":"133"},{"ruleId":"127","replacedBy":"134"},{"ruleId":"119","severity":1,"message":"129","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"135","line":1,"column":28,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"136","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":13},{"ruleId":"119","severity":1,"message":"137","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":20},{"ruleId":"119","severity":1,"message":"138","line":13,"column":11,"nodeType":"121","messageId":"122","endLine":13,"endColumn":19},{"ruleId":"119","severity":1,"message":"139","line":13,"column":21,"nodeType":"121","messageId":"122","endLine":13,"endColumn":32},{"ruleId":"119","severity":1,"message":"129","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"135","line":1,"column":28,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"140","line":1,"column":38,"nodeType":"121","messageId":"122","endLine":1,"endColumn":48},{"ruleId":"125","replacedBy":"141"},{"ruleId":"127","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":16,"column":11,"nodeType":"145","endLine":16,"endColumn":53},{"ruleId":"119","severity":1,"message":"129","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"146","line":9,"column":10,"nodeType":"121","messageId":"122","endLine":9,"endColumn":18},{"ruleId":"119","severity":1,"message":"147","line":9,"column":20,"nodeType":"121","messageId":"122","endLine":9,"endColumn":31},{"ruleId":"119","severity":1,"message":"139","line":14,"column":21,"nodeType":"121","messageId":"122","endLine":14,"endColumn":32},{"ruleId":"119","severity":1,"message":"148","line":15,"column":9,"nodeType":"121","messageId":"122","endLine":15,"endColumn":16},{"ruleId":"119","severity":1,"message":"149","line":37,"column":13,"nodeType":"121","messageId":"122","endLine":37,"endColumn":21},{"ruleId":"119","severity":1,"message":"137","line":7,"column":10,"nodeType":"121","messageId":"122","endLine":7,"endColumn":20},{"ruleId":"119","severity":1,"message":"138","line":10,"column":11,"nodeType":"121","messageId":"122","endLine":10,"endColumn":19},{"ruleId":"119","severity":1,"message":"139","line":10,"column":21,"nodeType":"121","messageId":"122","endLine":10,"endColumn":32},{"ruleId":"119","severity":1,"message":"124","line":12,"column":10,"nodeType":"121","messageId":"122","endLine":12,"endColumn":22},{"ruleId":"119","severity":1,"message":"137","line":7,"column":10,"nodeType":"121","messageId":"122","endLine":7,"endColumn":20},{"ruleId":"119","severity":1,"message":"139","line":10,"column":21,"nodeType":"121","messageId":"122","endLine":10,"endColumn":32},{"ruleId":"119","severity":1,"message":"124","line":12,"column":10,"nodeType":"121","messageId":"122","endLine":12,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":18,"column":54,"nodeType":"152","messageId":"153","endLine":18,"endColumn":56},{"ruleId":"154","severity":1,"message":"155","line":32,"column":6,"nodeType":"156","endLine":32,"endColumn":8,"suggestions":"157"},{"ruleId":"119","severity":1,"message":"129","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"139","line":8,"column":21,"nodeType":"121","messageId":"122","endLine":8,"endColumn":32},{"ruleId":"119","severity":1,"message":"148","line":9,"column":9,"nodeType":"121","messageId":"122","endLine":9,"endColumn":16},{"ruleId":"119","severity":1,"message":"158","line":11,"column":10,"nodeType":"121","messageId":"122","endLine":11,"endColumn":20},{"ruleId":"119","severity":1,"message":"159","line":11,"column":22,"nodeType":"121","messageId":"122","endLine":11,"endColumn":35},{"ruleId":"119","severity":1,"message":"160","line":15,"column":10,"nodeType":"121","messageId":"122","endLine":15,"endColumn":15},{"ruleId":"119","severity":1,"message":"161","line":15,"column":17,"nodeType":"121","messageId":"122","endLine":15,"endColumn":25},{"ruleId":"119","severity":1,"message":"124","line":18,"column":10,"nodeType":"121","messageId":"122","endLine":18,"endColumn":22},{"ruleId":"119","severity":1,"message":"162","line":18,"column":24,"nodeType":"121","messageId":"122","endLine":18,"endColumn":39},"no-unused-vars","'AuthOptions' is defined but never used.","Identifier","unusedVar","'userCollection' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","no-native-reassign",["163"],"no-negated-in-lhs",["164"],"'useEffect' is defined but never used.",["163"],["164"],"'PropTypes' is defined but never used.",["163"],["164"],"'useState' is defined but never used.","'axios' is defined but never used.","'useHistory' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'useContext' is defined but never used.",["163"],["164"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'history' is assigned a value but never used.","'loginRes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allGames'. Either include it or remove the dependency array.","ArrayExpression",["165"],"'toUsername' is assigned a value but never used.","'setToUsername' is assigned a value but never used.","'inbox' is assigned a value but never used.","'setInbox' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},"Update the dependencies array to be: [allGames]",{"range":"168","text":"169"},[1142,1144],"[allGames]"]