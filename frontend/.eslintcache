[{"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/App.js":"1","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/AuthOptions.js":"2","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/NewUserForm.js":"3","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Login.js":"4","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/context/UserContent.js":"5","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/index.js":"6","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Matches.js":"7","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Header.js":"8","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Home.js":"9","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/reportWebVitals.js":"10","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Match.js":"11","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/GameResultForm.js":"12","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Ranking.js":"13"},{"size":3565,"mtime":1612725734279,"results":"14","hashOfConfig":"15"},{"size":1038,"mtime":1612663133465,"results":"16","hashOfConfig":"15"},{"size":3761,"mtime":1612646346427,"results":"17","hashOfConfig":"15"},{"size":2099,"mtime":1612647458384,"results":"18","hashOfConfig":"15"},{"size":76,"mtime":1612391795808,"results":"19","hashOfConfig":"15"},{"size":500,"mtime":1612224480910,"results":"20","hashOfConfig":"15"},{"size":1336,"mtime":1612672440753,"results":"21","hashOfConfig":"15"},{"size":507,"mtime":1612724046437,"results":"22","hashOfConfig":"15"},{"size":1493,"mtime":1612546143856,"results":"23","hashOfConfig":"15"},{"size":362,"mtime":1612224480911,"results":"24","hashOfConfig":"15"},{"size":538,"mtime":1612501297392,"results":"25","hashOfConfig":"15"},{"size":2668,"mtime":1612722507693,"results":"26","hashOfConfig":"15"},{"size":1327,"mtime":1612724652064,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"l6nvon",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/App.js",["62","63","64"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/AuthOptions.js",[],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/NewUserForm.js",["65"],"import React, { useEffect, useState, useContext } from 'react';\n// import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport UserContext from '../context/UserContent';\nimport { useHistory } from 'react-router-dom';\n// import { Form } from 'react-bootstrap';\nconst NewUserForm = (props) => {\n  const [username, setUsername] = useState('');\n  const [skill, setSkill] = useState('');\n  const [availability, setAvailability] = useState('');\n  const [bio, setBio] = useState('');\n  const [image, setImage] = useState('');\n  const [city, setCity] = useState('');\n  const [zipcode, setZipcode] = useState('');\n\n  const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  // const onFormSubmit = (event) => {\n  const onFormSubmit = async (event) => {\n    event.preventDefault();\n    const newUser = {\n      username,\n      skill,\n      availability,\n      city,\n      zipcode,\n      bio,\n      image,\n    };\n    const loginRes = await axios.post(\n      'http://localhost:5000/users/add',\n      newUser\n    );\n\n    if (loginRes.status === 200) {\n      const loginRes = await axios.post(\n        'http://localhost:5000/users/login',\n        newUser\n      );\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user,\n      });\n      localStorage.setItem('auth-token', loginRes.data.token);\n      history.push('/');\n    }\n\n    // const loginRes = await axios.post('http://localhost:5000/users/add', {\n    //   username,\n    // });\n    // setUserData({\n    //   token: loginRes.data.token,\n    //   user: loginRes.data.user,\n    // });\n    // localStorage.setItem('auth-token', loginRes.data.token);\n    // history.push('/');\n  };\n\n  return (\n    <form\n      className=\"new-user-form\"\n      onSubmit={onFormSubmit}\n      data-testid=\"NewUserForm--form\"\n    >\n      <div>\n        <label htmlFor=\"username\">Username:</label>\n        <input\n          id=\"username\"\n          name=\"username\"\n          onChange={(event) => setUsername(event.target.value)}\n          value={username}\n          className=\"username\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"skill\">Skill Level:</label>\n        <input\n          id=\"skill\"\n          name=\"skill\"\n          onChange={(event) => setSkill(event.target.value)}\n          value={skill}\n          className=\"skill\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"availability\">Availability:</label>\n        <input\n          id=\"availability\"\n          name=\"availability\"\n          onChange={(event) => setAvailability(event.target.value)}\n          value={availability}\n          className=\"availability\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"city\">City:</label>\n        <input\n          id=\"city\"\n          name=\"city\"\n          onChange={(event) => setCity(event.target.value)}\n          value={city}\n          className=\"city\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"zipcode\">Zipcode:</label>\n        <input\n          id=\"zipcode\"\n          name=\"zipcode\"\n          onChange={(event) => setZipcode(event.target.value)}\n          value={zipcode}\n          className=\"zipcode\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"bio\">About:</label>\n        <input\n          id=\"bio\"\n          name=\"bio\"\n          onChange={(event) => setBio(event.target.value)}\n          value={bio}\n          className=\"bio\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"image\">Image:</label>\n        <input\n          id=\"image\"\n          name=\"image\"\n          onChange={(event) => setImage(event.target.value)}\n          value={image}\n          className=\"image\"\n        />\n      </div>\n      <input type=\"submit\" value=\"Add User\" />\n    </form>\n  );\n};\n\nexport default NewUserForm;\n",["66","67"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Login.js",["68","69"],"import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport UserContext from '../context/UserContent';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Login = (props) => {\n  const [username, setUsername] = useState('');\n  const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  const onFormSubmit = async (event) => {\n    event.preventDefault();\n    const loginUser = { username };\n    const loginRes = await axios.post(\n      'http://localhost:5000/users/login',\n      loginUser\n    );\n    setUserData({\n      token: loginRes.data.token,\n      user: loginRes.data.user,\n    });\n    localStorage.setItem('auth-token', loginRes.data.token);\n    history.push('/');\n  };\n\n  return (\n    <Container>\n      <Form\n        className=\"new-user-form\"\n        onSubmit={onFormSubmit}\n        data-testid=\"NewUserForm--form\"\n      >\n        <Form.Group controlId=\"formUsername\">\n          {/* <div> */}\n          <Form.Label htmlFor=\"username\">Username:</Form.Label>\n          <Form.Control\n            id=\"username\"\n            name=\"username\"\n            onChange={(event) => setUsername(event.target.value)}\n            value={username}\n            className=\"username\"\n          />\n          {/* </div> */}\n        </Form.Group>\n        <Button variant=\"secondary\" type=\"submit\" value=\"Log In\">\n          Log In\n        </Button>\n      </Form>\n    </Container>\n    // <form\n    //   className=\"new-user-form\"\n    //   onSubmit={onFormSubmit}\n    //   data-testid=\"NewUserForm--form\"\n    // >\n    //   <div>\n    //     <label htmlFor=\"username\">Username:</label>\n    //     <input\n    //       id=\"username\"\n    //       name=\"username\"\n    //       onChange={(event) => setUsername(event.target.value)}\n    //       value={username}\n    //       className=\"username\"\n    //     />\n    //   </div>\n\n    //   <input type=\"submit\" value=\"Log In\" />\n    // </form>\n  );\n};\n\nexport default Login;\n",["70","71"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/context/UserContent.js",[],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/index.js",[],["72","73"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Matches.js",["74","75","76","77","78","79"],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Header.js",[],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Home.js",["80","81","82"],"import React, { useEffect, useState, useContext } from 'react';\n// // import PropTypes from 'prop-types';\n// import axios from 'axios';\n// import UserContext from '../context/UserContent';\n// import { useHistory } from 'react-router-dom';\n// // import Matches from './Matches';\n// import Match from './Match';\n\n// // here we will need something that says: if user exists, show these matches\n// const Home = (props) => {\n//   // create button, if button is clicked. call the prop and iterate through matches, match should hace its own component\n//   console.log(props.userMatches);\n//   const { userData, setUserData } = useContext(UserContext);\n//   //   return <h1> homepage</h1>;\n//   const userMatchesList = props.userMatches.map((user, i) => {\n//     return (\n//       <li key={i}>\n//         <Match\n//           username={user.username}\n//           availability={user.availability}\n//           skillLevel={user.skillLevel}\n//           bio={user.bio}\n//           city={user.city}\n//           zipcode={user.zipcode}\n//         />\n//       </li>\n//     );\n//   });\n//   return (\n//     <div>\n//       {/* {(userData.user && (props.userMatches.length > 0)) ( */}\n\n//       {props.userMatches.length > 0 ? (\n//         <button onClick={userMatchesList}> Check Matches </button>\n//       ) : (\n//         <h1> No matches found</h1>\n//       )}\n//     </div>\n//   );\n// };\n// export default Home;\n\nconst Home = (props) => {\n  return <h1> this is the homepage </h1>;\n};\nexport default Home;\n","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/reportWebVitals.js",[],"/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Match.js",["83"],"import React from 'react';\n\nconst Match = (props) => {\n  return (\n    <div className=\"match\">\n      <ul className=\"match-details\">\n        <li>Username: {props.username}</li>\n        <li>Bio: {props.bio}</li>\n        <li>Skill level {props.skillLevel}</li>\n        <li>Availability: {props.availability}</li>\n        <li>City: {props.city}</li>\n        <li>Zipcode: {props.zipcode}</li>\n        <li>\n          Photo:\n          <img src={props.image} alt=\"user photo\" />\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Match;\n","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/GameResultForm.js",["84","85","86","87","88","89"],"import React, { useEffect, useState, useContext } from 'react';\n// import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport UserContext from '../context/UserContent';\nimport { useHistory } from 'react-router-dom';\n// import { Form } from 'react-bootstrap';\n\nconst GameResultForm = (props) => {\n  const [username, setUsername] = useState('');\n  const [winner, setWinner] = useState('');\n  const [date, setDate] = useState('');\n  const [tennisBuddy, setTennisBuddy] = useState('');\n\n  const { userData, setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  // const onFormSubmit = (event) => {\n  const onFormSubmit = async (event) => {\n    event.preventDefault();\n    // ADD TENNIS BUDDY FIELD TO BACKEND AND MAYBE SCORE CARD\n    // HOW TO IMPLEMENT CALENDAR COMPONENT THAT CONTAINS PAST AND FUTURE GAMES?\n    // for chat messages: back end model - only contain the user field (the user recieving messages) and the value can be an array of hashes. the hashes key would be: from_user, date (date.now), and message string.\n    const newResult = {\n      username: userData.user.username,\n      winner,\n      date,\n      tennisBuddy,\n    };\n\n    // const loginRes = await axios\n    //   .post('http://localhost:5000/match/add', newResult)\n    //   .then((response) => {})\n    //   .catch((err) => {\n    // console.log(err.response);\n    //   });\n    try {\n      const loginRes = await axios.post(\n        'http://localhost:5000/match/add',\n        newResult\n      );\n      setTennisBuddy('');\n      setWinner('');\n      setDate('');\n    } catch (err) {\n      console.log(err.response);\n    }\n\n    console.log(newResult);\n  };\n\n  return (\n    <form\n      className=\"new-user-form\"\n      onSubmit={onFormSubmit}\n      data-testid=\"NewUserForm--form\"\n    >\n      <div>\n        <label htmlFor=\"buddy\">Tennis Buddy:</label>\n        <input\n          id=\"buddy\"\n          name=\"buddy\"\n          onChange={(event) => setTennisBuddy(event.target.value)}\n          value={tennisBuddy}\n          className=\"buddy\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"winner\">Winner:</label>\n        <input\n          id=\"winner\"\n          name=\"winner\"\n          onChange={(event) => setWinner(event.target.value)}\n          value={winner}\n          className=\"winner\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"date\">Date:</label>\n        <input\n          id=\"date\"\n          name=\"date\"\n          onChange={(event) => setDate(event.target.value)}\n          value={date}\n          className=\"date\"\n        />\n      </div>\n      <input type=\"submit\" value=\"Record Result\" />\n    </form>\n  );\n};\n\nexport default GameResultForm;\n","/Users/idagoitom/Desktop/ADA/capstone/Capstone-PlaySetMatch/frontend/src/components/Ranking.js",["90","91","92","93"],{"ruleId":"94","severity":1,"message":"95","line":9,"column":8,"nodeType":"96","messageId":"97","endLine":9,"endColumn":19},{"ruleId":"94","severity":1,"message":"98","line":22,"column":10,"nodeType":"96","messageId":"97","endLine":22,"endColumn":24},{"ruleId":"94","severity":1,"message":"99","line":23,"column":10,"nodeType":"96","messageId":"97","endLine":23,"endColumn":22},{"ruleId":"94","severity":1,"message":"100","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"94","severity":1,"message":"100","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"105","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":17},{"ruleId":"101","replacedBy":"106"},{"ruleId":"103","replacedBy":"107"},{"ruleId":"101","replacedBy":"108"},{"ruleId":"103","replacedBy":"109"},{"ruleId":"94","severity":1,"message":"100","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"110","line":1,"column":28,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"111","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":13},{"ruleId":"94","severity":1,"message":"112","line":5,"column":10,"nodeType":"96","messageId":"97","endLine":5,"endColumn":20},{"ruleId":"94","severity":1,"message":"113","line":13,"column":11,"nodeType":"96","messageId":"97","endLine":13,"endColumn":19},{"ruleId":"94","severity":1,"message":"114","line":13,"column":21,"nodeType":"96","messageId":"97","endLine":13,"endColumn":32},{"ruleId":"94","severity":1,"message":"100","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"110","line":1,"column":28,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"115","line":1,"column":38,"nodeType":"96","messageId":"97","endLine":1,"endColumn":48},{"ruleId":"116","severity":1,"message":"117","line":15,"column":11,"nodeType":"118","endLine":15,"endColumn":53},{"ruleId":"94","severity":1,"message":"100","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"119","line":9,"column":10,"nodeType":"96","messageId":"97","endLine":9,"endColumn":18},{"ruleId":"94","severity":1,"message":"120","line":9,"column":20,"nodeType":"96","messageId":"97","endLine":9,"endColumn":31},{"ruleId":"94","severity":1,"message":"114","line":14,"column":21,"nodeType":"96","messageId":"97","endLine":14,"endColumn":32},{"ruleId":"94","severity":1,"message":"121","line":15,"column":9,"nodeType":"96","messageId":"97","endLine":15,"endColumn":16},{"ruleId":"94","severity":1,"message":"122","line":37,"column":13,"nodeType":"96","messageId":"97","endLine":37,"endColumn":21},{"ruleId":"94","severity":1,"message":"112","line":7,"column":10,"nodeType":"96","messageId":"97","endLine":7,"endColumn":20},{"ruleId":"94","severity":1,"message":"113","line":10,"column":11,"nodeType":"96","messageId":"97","endLine":10,"endColumn":19},{"ruleId":"94","severity":1,"message":"114","line":10,"column":21,"nodeType":"96","messageId":"97","endLine":10,"endColumn":32},{"ruleId":"94","severity":1,"message":"99","line":12,"column":10,"nodeType":"96","messageId":"97","endLine":12,"endColumn":22},"no-unused-vars","'AuthOptions' is defined but never used.","Identifier","unusedVar","'userCollection' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'useEffect' is defined but never used.","no-native-reassign",["123"],"no-negated-in-lhs",["124"],"'PropTypes' is defined but never used.",["123"],["124"],["123"],["124"],"'useState' is defined but never used.","'axios' is defined but never used.","'useHistory' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'useContext' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'history' is assigned a value but never used.","'loginRes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]